<?xml version="1.0"?>
<typelist
  xmlns="http://guidewire.com/typelists"
  name="RoundingModeType"
  desc="Values corresponding to java.math.RoundingMode"
  final="false"
  subpackage="financials">
  <!--
    NOTE: conversion between typekey and java.math.RoundingMode depends on string matching of the code field.
    If any new modes need to be added, ensure that the value for code is the one recognized by RoundingMode.valueOf(String)
   -->
  <typecode code="UP" desc="RoundingMode.UP -- Rounding mode to round away from zero." name="ROUND_UP"/>
  <typecode code="DOWN" desc="RoundingMode.DOWN -- Rounding mode to round towards zero." name="ROUND_DOWN"/>
  <typecode code="CEILING" desc="RoundingMode.CEILING -- Rounding mode to round towards positive infinity." name="ROUND_CEILING"/>
  <typecode code="FLOOR" desc="RoundingMode.FLOOR -- Rounding mode to round towards negative infinity." name="ROUND_FLOOR"/>
  <typecode code="HALF_UP" desc="RoundingMode.HALF_UP -- Rounding mode to round towards nearest neighbor, unless both neighbors are equidistant, in which case round up." name="ROUND_HALF_UP"/>
  <typecode code="HALF_DOWN" desc="RoundingMode.HALF_DOWN -- Rounding mode to round towards nearest neighbor, unless both neighbors are equidistant, in which case round down." name="ROUND_HALF_DOWN"/>
  <typecode code="HALF_EVEN" desc="RoundingMode.HALF_EVEN -- Rounding mode to round towards nearest neighbor, unless both neighbors are equidistant, in which case round towards the even neighbor." name="ROUND_HALF_EVEN"/>
  <typecode code="UNNECESSARY" desc="RoundingMode.UNNECESSARY -- Rounding mode to assert that the requested operation has an exact result, hence no rounding is necessary." name="ROUND_UNNECESSARY"/>
</typelist>
