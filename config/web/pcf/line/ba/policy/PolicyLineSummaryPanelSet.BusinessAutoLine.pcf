<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <PanelSet
    id="PolicyLineSummaryPanelSet"
    mode="BusinessAutoLine">
    <Require
      name="line"
      type="PolicyLine"/>
    <Require
      name="jobWizardHelper"
      type="web.job.JobWizardHelper"/>
    <Variable
      initialValue="line as BusinessAutoLine"
      name="baLine"/>
    <!-- Line-level clauses -->
    <DetailViewPanel
      id="LineDV">
      <InputColumn>
        <Label
          label="displaykey.Web.Policy.BA.LineLevelCoverages"
          visible="not baLine.BALineCoverages.IsEmpty"/>
        <ListViewInput
          def="CoverageSummaryLV((baLine).BALineCoverages.toList(), baLine)"
          labelAbove="true"
          visible="not baLine.BALineCoverages.IsEmpty">
          <Toolbar/>
        </ListViewInput>
        <Label
          label="displaykey.Web.Policy.Coverages.Exclusions"
          visible="not baLine.BALineExclusions.IsEmpty"/>
        <ListViewInput
          def="CoverageSummaryLV(baLine.BALineExclusions.toList(), baLine)"
          id="ExclusionSummaryLV"
          labelAbove="true"
          visible="not baLine.BALineExclusions.IsEmpty">
          <Toolbar/>
        </ListViewInput>
        <Label
          label="displaykey.Web.Policy.Coverages.PolicyConditions"
          visible="not baLine.BALineConditions.IsEmpty"/>
        <ListViewInput
          def="CoverageSummaryLV(baLine.BALineConditions.toList(), baLine)"
          id="ConditionSummaryLV"
          labelAbove="true"
          visible="not baLine.BALineConditions.IsEmpty">
          <Toolbar/>
        </ListViewInput>
      </InputColumn>
      <InputColumn>
        <ListViewInput
          boldLabel="true"
          id="HiredAutoLVInput"
          label="displaykey.Web.Policy.BA.HiredAutoStates"
          labelAbove="true"
          visible="true">
          <Toolbar/>
          <ListViewPanel>
            <RowIterator
              checkBoxVisible="true"
              editable="true"
              elementName="jurisdiction"
              hasCheckBoxes="true"
              hideCheckBoxesIfReadOnly="true"
              id="HiredAutoIterator"
              value="baLine.HiredAutoJurisdictions">
              <Row>
                <TypeKeyCell
                  id="Jurisdiction"
                  label="displaykey.Web.Policy.BA.State"
                  value="jurisdiction.State"
                  width="100"/>
                <Cell
                  editable="true"
                  id="CostHire"
                  label="displaykey.Web.Policy.BA.CostHire"
                  numCols="15"
                  required="true"
                  value="jurisdiction.HiredAutoBasis.Basis"
                  width="50"/>
                <Cell
                  editable="true"
                  id="IfAny"
                  label="displaykey.Web.Policy.BA.IfAnyExposure"
                  numCols="2"
                  value="jurisdiction.HiredAutoBasis.IfAnyExposure"/>
              </Row>
            </RowIterator>
          </ListViewPanel>
        </ListViewInput>
        <InputDivider/>
        <ListViewInput
          boldLabel="true"
          id="NonownedLVInput"
          label="displaykey.Web.Policy.BA.NonownedStates"
          labelAbove="true">
          <Toolbar/>
          <ListViewPanel>
            <RowIterator
              editable="true"
              elementName="jurisdiction"
              id="NonownedIterator"
              value="baLine.NonOwnedJurisdictions">
              <Row>
                <TypeKeyCell
                  id="Jurisdiction"
                  label="displaykey.Web.Policy.BA.State"
                  value="jurisdiction.State"
                  width="100"/>
                <Cell
                  editable="true"
                  id="NumEmployees"
                  label="displaykey.Web.Policy.BA.NumEmployees"
                  numCols="15"
                  value="jurisdiction.NonOwnedBasis.NumEmployees"
                  width="50"/>
                <Cell
                  editable="true"
                  id="TotalPartners"
                  label="displaykey.Web.Policy.BA.TotalPartners"
                  numCols="15"
                  value="jurisdiction.NonOwnedBasis.NumPartners"
                  width="50"/>
                <Cell
                  editable="true"
                  id="TotalVolunteers"
                  label="displaykey.Web.Policy.BA.TotalVolunteers"
                  numCols="15"
                  value="jurisdiction.NonOwnedBasis.NumVolunteers"
                  width="50"/>
              </Row>
            </RowIterator>
          </ListViewPanel>
        </ListViewInput>
      </InputColumn>
    </DetailViewPanel>
    <PanelRef>
      <TitleBar
        title="displaykey.Web.Policy.BA.State"/>
      <Toolbar/>
      <ListDetailPanel
        id="StateSummaryLDV"
        selectionName="selectedState"
        selectionType="Jurisdiction">
        <ListViewPanel
          id="BAStateSummaryLV">
          <RowIterator
            editable="false"
            elementName="theState"
            type="Jurisdiction"
            value="baLine.GaragingJurisdictions*.State">
            <Row>
              <TextCell
                action="BALocationSummaryPopup.push(baLine, gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(theState))"
                align="left"
                id="State"
                label="displaykey.Web.Policy.BA.State"
                sortOrder="1"
                value="gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(theState)">
                <ColumnFooter>
                  <TextCell
                    action="BAVehicleSchedulePopup.push(baLine, null)"
                    id="SummTotal"
                    value="displaykey.Web.Policy.BA.SummaryTotals"/>
                </ColumnFooter>
              </TextCell>
              <TextCell
                align="right"
                id="LocCount"
                label="displaykey.Web.Policy.BA.Locations"
                value="line.Branch.countLocationsInState(gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(theState))">
                <ColumnFooter>
                  <TextCell
                    id="LocTotal"
                    value="line.Branch.PolicyLocations.length"/>
                </ColumnFooter>
              </TextCell>
              <TextCell
                align="right"
                id="VehCount"
                label="displaykey.Web.Policy.BA.Total.Vehicles"
                value="baLine.Vehicles.countWhere( \ v -&gt; v.Location.State == gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(theState))">
                <ColumnFooter>
                  <TextCell
                    id="VehTotal"
                    value="baLine.Vehicles.length"/>
                </ColumnFooter>
              </TextCell>
              <TextCell
                align="right"
                id="PassengerCount"
                label="displaykey.Web.Policy.BA.Total.PrivatePassenger"
                value="baLine.Vehicles.countWhere( \ v -&gt; v.Location.State == gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(theState) and v.VehicleType == &quot;PP&quot;)"
                wrapLabel="true">
                <ColumnFooter>
                  <TextCell
                    id="PassengerTotal"
                    value="baLine.Vehicles.countWhere( \ v -&gt; v.VehicleType == &quot;PP&quot;)"/>
                </ColumnFooter>
              </TextCell>
              <TextCell
                align="right"
                id="TruckCount"
                label="displaykey.Web.Policy.BA.Total.Trucks"
                value="baLine.Vehicles.countWhere( \ v -&gt; v.Location.State == gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(theState) and v.VehicleType == &quot;Commercial&quot;)"
                wrapLabel="true">
                <ColumnFooter>
                  <TextCell
                    id="TruckTotal"
                    value="baLine.Vehicles.countWhere( \ v -&gt; v.VehicleType == &quot;Commercial&quot;)"/>
                </ColumnFooter>
              </TextCell>
            </Row>
          </RowIterator>
        </ListViewPanel>
        <CardViewPanel>
          <Card
            id="CoverageSummaryCard"
            title="displaykey.Web.PolicyLine.Coverages">
            <PanelRef
              editable="false">
              <TitleBar
                title="displaykey.Web.Policy.BA.StateCoverages(selectedState)"/>
              <Toolbar/>
              <DetailViewPanel
                editable="false"
                id="BAStateCoverageSummaryDV">
                <Variable
                  initialValue="selectedState"
                  name="coveredJurisdiction"
                  recalculateOnRefresh="true"/>
                <InputColumn>
                  <Label
                    label="displaykey.Web.Policy.BA.StateLevelCoverages"/>
                  <ListViewInput
                    def="CoverageSummaryLV(baLine.getOtherthanHiredAndNonOwnedCoverages(coveredJurisdiction) as List&lt;domain.Clause&gt;, baLine)"
                    labelAbove="true">
                    <Toolbar/>
                  </ListViewInput>
                </InputColumn>
              </DetailViewPanel>
            </PanelRef>
          </Card>
        </CardViewPanel>
      </ListDetailPanel>
    </PanelRef>
  </PanelSet>
</PCF>
