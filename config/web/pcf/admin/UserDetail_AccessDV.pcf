<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <DetailViewPanel
    id="UserDetail_AccessDV">
    <Require
      name="user"
      type="User"/>
    <Variable
      initialValue="user.UseProducerCodeSecurity"
      name="usePCSecurity"
      recalculateOnRefresh="true"/>
    <InputColumn>
      <BooleanRadioInput
        confirmMessage="displaykey.Web.Admin.UserAccessDV.SwitchFromProducerCodeSecurity"
        editable="perm.System.usereditpcsec"
        id="UseProducerCodeSecurity"
        label="displaykey.Web.Admin.UserAccessDV.UseProducerCodeSecurity"
        showConfirmMessage="user.UseProducerCodeSecurity"
        value="usePCSecurity">
        <PostOnChange
          onChange="user.updateUseProducerCodeSecurity(usePCSecurity)"/>
      </BooleanRadioInput>
      <ListViewInput
        boldLabel="true"
        label="displaykey.Web.Admin.UserDetailDV.Groups"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="UserGroupsLV"/>
        </Toolbar>
        <ListViewPanel
          id="UserGroupsLV">
          <RowIterator
            conversionExpression="var gU : GroupUser = new GroupUser();                                              gU.User = user;                                              PickedValue.addToUsers(gU);                                              return gU"
            editable="true"
            elementName="groupUser"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            pickLocation="OrganizationGroupTreePopup.push(user.makeOrganizationSelection(), false, false)"
            toAdd="user.addToGroup(groupUser);                               gw.api.web.PebblesUtil.invalidateIterators(CurrentLocation, UserProducerCode)"
            toRemove="groupUser.Group.removeUser(user)"
            value="user.AllGroupUsersAsArray">
            <Row>
              <Cell
                action="GroupDetailPage.go(groupUser.Group)"
                available="groupUser.Group != null and groupUser.Group.GroupType != &quot;root&quot;"
                id="Group"
                label="displaykey.Web.Admin.GroupUsers.Group"
                required="true"
                unique="true"
                value="groupUser.Group"/>
              <CheckBoxCell
                id="Member"
                label="displaykey.Web.Admin.GroupUsers.Member"
                value="groupUser.Member"/>
              <CheckBoxCell
                id="Manager"
                label="displaykey.Web.Admin.GroupUsers.Manager"
                value="groupUser.Manager"/>
              <Cell
                align="left"
                editable="true"
                id="LoadFactorType"
                label="displaykey.Web.Admin.GroupUsers.LoadFactorType"
                value="groupUser.LoadFactorType"/>
              <Cell
                align="left"
                editable="true"
                id="LoadFactor"
                label="displaykey.Web.Admin.GroupUsers.LoadFactor"
                validationExpression="!(groupUser.LoadFactor &lt; 0 or groupUser.LoadFactor &gt; 100)                     ? null : displaykey.Web.Admin.GroupUsers.LoadFactor.OufOfRange"
                value="groupUser.LoadFactor"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <InputDivider
        visible="user.UseProducerCodeSecurity"/>
      <ListViewInput
        boldLabel="true"
        label="displaykey.Web.Admin.UserAccessDV.ProducerCodesFromGroups"
        labelAbove="true"
        visible="user.UseProducerCodeSecurity">
        <Toolbar/>
        <ListViewPanel
          id="ProducerCodesFromGroupsLV">
          <RowIterator
            editable="true"
            elementName="prodCode"
            type="ProducerCode"
            value="user.InheritedProducerCodes.toArray()">
            <Variable
              initialValue="gw.web.admin.UserUIHelper.initialGroups(prodCode, user)"
              name="groups"/>
            <Row>
              <Cell
                action="AdminProducerCodeDetail.go(prodCode)"
                id="Code"
                label="displaykey.Web.Admin.UserAccessDV.ProducerCodeCode"
                unique="true"
                value="prodCode.Code"/>
              <Cell
                id="Desci"
                label="displaykey.Web.Admin.UserAccessDV.ProducerCodeDescription"
                value="prodCode.Description"/>
              <Cell
                id="Status"
                label="displaykey.Web.Admin.UserAccessDV.ProducerCodeStatus"
                value="prodCode.ProducerStatus"/>
              <LinkCell
                id="Groups"
                label="displaykey.Web.Admin.UserAccessDV.InheritFromGroup">
                <LinkIterator
                  elementName="grp"
                  type="Group"
                  value="groups">
                  <Link
                    action="GroupDetailPage.go(grp)"
                    available="grp.GroupType != &quot;root&quot;"
                    id="Link"
                    label="grp"/>
                  <Link
                    id="Filler"
                    label="&quot;,  &quot;"
                    visible="gw.web.admin.UserUIHelper.isNotLastEntry(groups, grp)"/>
                </LinkIterator>
              </LinkCell>
              <LinkCell
                id="Roles"
                label="displaykey.Web.Admin.UserAccessDV.Actions">
                <Link
                  action="ModifyUserProducerCodeRolesPopup.push(user, prodCode, false)"
                  id="ViewRolesButton"
                  label="displaykey.Web.Admin.UserAccessDV.ViewRolesButton"
                  styleClass="miniButton"
                  visible="prodCode.ProducerCodeRoles.Count &gt; 0"/>
                <Link
                  action="ModifyUserProducerCodeRolesPopup.push(user, prodCode)"
                  hideIfReadOnly="true"
                  id="ModifyRolesButton"
                  label="displaykey.Web.Admin.UserAccessDV.ModifyRolesButton"
                  styleClass="miniButton"
                  visible="prodCode.ProducerCodeRoles.Count &gt; 0"/>
              </LinkCell>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        label="displaykey.Web.Admin.UserAccessDV.AdditionalProducerCodes"
        labelAbove="true"
        visible="user.UseProducerCodeSecurity">
        <Toolbar>
          <IteratorButtons
            iterator="AdditionalProducerCodesLV"/>
        </Toolbar>
        <ListViewPanel
          id="AdditionalProducerCodesLV">
          <RowIterator
            editable="true"
            elementName="prodCode"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            pickLocation="AdminProducerCodeSearchPopup.push(user.Organization.Carrier                                        ? null : user.Organization,                                        user.InheritedProducerCodes, true)"
            toAdd="prodCode.addUser(user)"
            toRemove="prodCode.removeUser(user)"
            type="ProducerCode"
            value="user.AdditionalProducerCodes.toArray()">
            <Row>
              <Cell
                action="AdminProducerCodeDetail.go(prodCode)"
                id="Code"
                label="displaykey.Web.Admin.UserAccessDV.ProducerCodeCode"
                unique="true"
                value="prodCode.Code"/>
              <Cell
                id="Description"
                label="displaykey.Web.Admin.UserAccessDV.ProducerCodeDescription"
                value="prodCode.Description"/>
              <Cell
                id="Status"
                label="displaykey.Web.Admin.UserAccessDV.ProducerCodeStatus"
                value="prodCode.ProducerStatus"/>
              <LinkCell
                id="Roles"
                label="displaykey.Web.Admin.UserAccessDV.Actions">
                <Link
                  action="ModifyUserProducerCodeRolesPopup.push(user, prodCode, false)"
                  id="ViewRolesButton"
                  label="displaykey.Web.Admin.UserAccessDV.ViewRolesButton"
                  styleClass="miniButton"/>
                <Link
                  action="ModifyUserProducerCodeRolesPopup.push(user, prodCode)"
                  hideIfReadOnly="true"
                  id="ModifyRolesButton"
                  label="displaykey.Web.Admin.UserAccessDV.ModifyRolesButton"
                  styleClass="miniButton"/>
              </LinkCell>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
    </InputColumn>
  </DetailViewPanel>
</PCF>