package rules.Assignment.GlobalJobAssignmentRules_dir.AssignUnderwriter_dir

@gw.rules.RuleName("Assign branch by producer code")
internal class Assignbranchbyproducercode {
  static function doCondition(job : entity.Job) : boolean {
    
/*start00rule*/
return // Attempt to assign an underwriter based on the Policy's producer code --> Underwriting branch mapping
true
/*end00rule*/

  }

  static function doAction(job : entity.Job, actions : gw.rules.Action) {

/*start00rule*/
var assignment = job.CurrentRoleAssignment

// Get the latest PolicyPeriod (of possibly several branches)
var period = job.LatestPeriod

// Get the branch (underwriting group) implied by the policy period's producer code
var branch = period.ProducerCodeOfRecord.Branch

// Assign the role to this branch
if (branch != null and assignment.assignGroup( branch )) {
  gw.assignment.AssignmentUtil.logUserRoleAssignment(assignment, actions as java.lang.String)
  actions.exit()
}
/*end00rule*/

  }
}
