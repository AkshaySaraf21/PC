package rules.Assignment.GlobalJobAssignmentRules_dir.AssignUnderwriter_dir

@gw.rules.RuleName("Assign group by location")
internal class Assigngroupbylocation {
  static function doCondition(job : entity.Job) : boolean {
    
/*start00rule*/
return // Attempt to assign an underwriter based on address
true
/*end00rule*/

  }

  static function doAction(job : entity.Job, actions : gw.rules.Action) {

/*start00rule*/
var assignment = job.CurrentRoleAssignment

// Get the latest PolicyPeriod (of possibly several branches)
var period = job.LatestPeriod

// Assignment by location depends on using an address to find the group covering a geographic area
var addr : Address
addr = period.getAddressForAssignment()

// If we have an address to work with, assign by location using that address
if (addr != null) {
  if (assignment.assignGroupByLocation( "branch", addr, false, assignment.CurrentAssignment.AssignedGroup ) ) {
    // Then attempt to assign to the underwriting group within this branch
    if (assignment.assignGroupByRoundRobin( "branchuw", true, assignment.CurrentAssignment.AssignedGroup ) ) {
      gw.assignment.AssignmentUtil.logUserRoleAssignment(assignment, actions as java.lang.String)
      actions.exit()
    }
  }
}
/*end00rule*/

  }
}
