package rules.Assignment.GlobalPreRenewalAssignmentRules_dir.UnderwriterAssistant_dir

@gw.rules.RuleName("Assign uw asst group by location")
internal class Assignuwasstgroupbylocation {
  static function doCondition(policy : entity.Policy) : boolean {
    
/*start00rule*/
return // Attempt to assign an underwriting assistant based on address
true
/*end00rule*/

  }

  static function doAction(policy : entity.Policy, actions : gw.rules.Action) {

/*start00rule*/
// Get the PolicyPeriod in force as of today
/*
var period = policy.LatestBoundPeriod

var assignment = period.Job.CurrentRoleAssignment

// Assignment by location depends on using an address to find the group covering a geographic area
var addr : Address
addr = period.getAddressForAssignment()

// If we have an address to work with, assign by location using that address
if (addr != null) {
  if (policy.CurrentRoleAssignment.assignGroupByLocation( "branch", addr, false, assignment.CurrentAssignment.AssignedGroup ) ) {
    // Then attempt to assign to the proper group within this branch
    if (policy.CurrentRoleAssignment.assignGroupByRoundRobin( "branchuw", true, assignment.CurrentAssignment.AssignedGroup ) ) {
      gw.api.util.Logger.logDebug( "##### This is the Global Pre-renewal Assignment rule " + actions.getRule().DisplayName)
      gw.api.util.Logger.logDebug( "Assigned Group is " + policy.CurrentRoleAssignment.AssignedGroup.DisplayName )
      actions.exit()
    }
  }
}
*/
/*end00rule*/

  }
}
