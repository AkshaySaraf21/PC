#----- AccountContact upgrade properties

# An AccountContact.MapSubtype property maps 3.0 AccountContact subtypes to their 4.0 AccountContactRole counterparts.
# All concrete AccountContact and AccountContactRole subtypes must be mapped.
AccountContact.MapSubtype.AccountHolder=AccountHolder
AccountContact.MapSubtype.AccountingContact=AccountingContact
AccountContact.MapSubtype.AdditionalInsured=AdditionalInsured
AccountContact.MapSubtype.AdditionalInterest=AdditionalInterest
AccountContact.MapSubtype.BillingContact=BillingContact
AccountContact.MapSubtype.ClaimsInfoContact=ClaimsInfoContact
AccountContact.MapSubtype.Driver=Driver
AccountContact.MapSubtype.InspectionContact=InspectionContact
AccountContact.MapSubtype.NamedInsured=NamedInsured
AccountContact.MapSubtype.OwnerOfficer=OwnerOfficer
AccountContact.MapSubtype.ReceivedEmployee=LaborClient
AccountContact.MapSubtype.SecondaryContact=SecondaryContact
AccountContact.MapSubtype.SuppliedEmployee=LaborContractor

#----- PolicyContact upgrade properties

# A PolicyContact.MapSubtype property maps 3.0 PolicyContact subtypes to their 4.0 PolicyContactRole counterparts.
# All concrete PolicyContact and PolicyContactRole subtypes must be mapped except for,
#     PolicyNamedInsured - which is automatically mapped to either a PolicyPriNamedInsured or PolicyAddlNamedInsured (equivalent to the 3.0 model)
#     LocationNamedInsured - which doesn't map to a PolicyContactRole (and is not expected in any 3.0 databases)
PolicyContact.MapSubtype.BAVehicleAddnlInterest=PolicyAddlInterest
PolicyContact.MapSubtype.BOPBldgAddnlInterest=PolicyAddlInterest
PolicyContact.MapSubtype.PAVehicleAddnlInterest=PolicyAddlInterest
PolicyContact.MapSubtype.PolicyAddnlInsured=PolicyAddlInsured
PolicyContact.MapSubtype.PolicyBillingContact=PolicyBillingContact
PolicyContact.MapSubtype.PolicyDriver=PolicyDriver
PolicyContact.MapSubtype.PolicyOwnerOfficer=PolicyOwnerOfficer
PolicyContact.MapSubtype.PolicyReceivedEmployee=PolicyLaborClient
PolicyContact.MapSubtype.PolicySuppliedEmployee=PolicyLaborContractor

# A PolicyContactRole.Column Scope property is a comma-separated list of the concrete PolicyContactRoles that a column
# should be mapped on. The scope can also be set to 'All' which indicates that the field applies to all
# PolicyContactRole subtypes.
#
# A PolicyContactRole.Column Map property maps a column to a source column on the 3.0 PolicyContact, AccountContact, or
# Contact table.
#
# If a Scope property is defined for a column, then it must have a matching Map property.  The 'Subtype' column
# should not be mapped since subtype mapping is handled via the PolicyContact.MapSubtype properties.
PolicyContactRole.Column.FirstNameInternal.Scope=All
PolicyContactRole.Column.FirstNameInternal.Map=Contact.FirstName

PolicyContactRole.Column.LastNameInternal.Scope=All
PolicyContactRole.Column.LastNameInternal.Map=Contact.LastName

PolicyContactRole.Column.CompanyNameInternal.Scope=All
PolicyContactRole.Column.CompanyNameInternal.Map=Contact.Name

# The ContactDenorm column was added for Maui 4.0.2,
#   which means that if an upgrade occurs from rainier to 4.0.1, the ContactDenorm will not exist.
PolicyContactRole.Column.ContactDenorm.Scope=All
PolicyContactRole.Column.ContactDenorm.Map=Contact.ID

# Unfortunately, PolicyDriver never set the PolicyLine in 3.0, so this will have to be handle specially
#PolicyContactRole.Column.PersonalAutoLine.Scope=PolicyDriver
#PolicyContactRole.Column.PersonalAutoLine.Map=PolicyContact.PolicyLine

PolicyContactRole.Column.LicenseNumberInternal.Scope=PolicyDriver
PolicyContactRole.Column.LicenseNumberInternal.Map=Contact.LicenseNumber

PolicyContactRole.Column.LicenseStateInternal.Scope=PolicyDriver
PolicyContactRole.Column.LicenseStateInternal.Map=Contact.LicenseState

PolicyContactRole.Column.ApplicableGoodDriverDiscount.Scope=PolicyDriver
PolicyContactRole.Column.ApplicableGoodDriverDiscount.Map=PolicyContact.ApplicableGoodDriverDiscount

PolicyContactRole.Column.PolicyLine.Scope=PolicyAddlInsured
PolicyContactRole.Column.PolicyLine.Map=PolicyContact.PolicyLine

PolicyContactRole.Column.Relationship.Scope=PolicyAddlNamedInsured,PolicySecNamedInsured
PolicyContactRole.Column.Relationship.Map=PolicyContact.Relationship

# We don't expect to see PolicyOwnerOfficer in any 3.0 databases, but this is what they'd look like:
#PolicyContactRole.Column.RelationshipTitleInternal.Scope=PolicyOwnerOfficer
#PolicyContactRole.Column.RelationshipTitleInternal.Map=AccountContact.RelationshipTitle
#
#PolicyContactRole.Column.Included.Scope=PolicyOwnerOfficer
#PolicyContactRole.Column.Included.Map=PolicyContact.Included
#
#PolicyContactRole.Column.State.Scope=PolicyOwnerOfficer
#PolicyContactRole.Column.State.Map=PolicyContact.State
#
#PolicyContactRole.Column.ClassCode.Scope=PolicyOwnerOfficer
#PolicyContactRole.Column.ClassCodeID.Map=PolicyContact.ClassCodeID
#
#PolicyContactRole.Column.OwnershipPct.Scope=PolicyOwnerOfficer
#PolicyContactRole.Column.OwnershipPct.Map=PolicyContact.OwnershipPct

#----- PolicyLocation upgrade properties

# A PolicyLocation.MapColumn property maps a column to a source column on the 3.0 AccountLocation table.
# This is similar to the PolicyContactRole.Column properties (above) but is simplier in that it applies to
# PolicyLocation and all of its subtypes (OOTB there are no subtypes), and the source data can only come
# from an AccountLocation.
PolicyLocation.MapColumn.AddressLine1Internal=AddressLine1
PolicyLocation.MapColumn.AddressLine2Internal=AddressLine2
PolicyLocation.MapColumn.AddressLine3Internal=AddressLine3
PolicyLocation.MapColumn.CityInternal=City
PolicyLocation.MapColumn.CityInternalDenorm=CityDenorm
PolicyLocation.MapColumn.CountyInternal=County
PolicyLocation.MapColumn.PostalCodeInternal=PostalCode
PolicyLocation.MapColumn.PostalCodeInternalDenorm=PostalCodeDenorm
PolicyLocation.MapColumn.DescriptionInternal=Description
PolicyLocation.MapColumn.EmployeeCountInternal=EmployeeCount
PolicyLocation.MapColumn.StateInternal=State
PolicyLocation.MapColumn.CountryInternal=Country
PolicyLocation.MapColumn.AddressTypeInternal=AddressType
