<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <JobWizard
    acceleratedMenuActions="MultiQuoteAcceleratedMenuActions(issuance, policyPeriod, jobWizardHelper)"
    canEdit="(not issuance.Complete) and perm.Issuance.edit(issuance)"
    canVisit="perm.Issuance.view(issuance)"
    desc="The main Wizard for submitting a Policy."
    id="IssuanceWizard"
    independentStepsTitle="displaykey.Web.PolicyFile.ToolsMenuTitle"
    independentStepsTitleIcon="&quot;ToolsMenuTitle.png&quot;"
    infoBar="JobWizardInfoBar(issuance, policyPeriod)"
    initialStep="jobWizardHelper.getInitialWizardStepId( policyPeriod )"
    isDraftOnEnter="true"
    jobType="Issuance"
    menuActions="WizardMenuActions(jobWizardHelper,issuance,policyPeriod)"
    onConcurrentDataChange="CurrentLocation.cancel(); JobForward.go(issuance)"
    parent="JobForward(issuance)"
    subtitle="policyPeriod.Status.DisplayName"
    title="displaykey.Web.IssuanceWizard.Title(issuance.JobNumber)">
    <LocationEntryPoint
      signature="IssuanceWizard(issuance : Issuance, policyPeriod : PolicyPeriod)"/>
    <Variable
      name="issuance"
      type="Issuance"/>
    <Variable
      name="policyPeriod"
      type="PolicyPeriod"/>
    <Variable
      initialValue="gw.util.concurrent.LockingLazyVar.make(\ -&gt; policyPeriod.OpenForEdit)"
      name="openForEditInit"
      recalculateOnRefresh="true"/>
    <Variable
      initialValue="openForEditInit.get()"
      name="openForEdit"
      recalculateOnRefresh="true"/>
    <Variable
      initialValue="policyPeriod.Policy"
      name="policy"
      recalculateOnRefresh="true"/>
    <Variable
      initialValue="policy.Account"
      name="account"
      recalculateOnRefresh="true"/>
    <Variable
      initialValue="policy.Product.Code"
      name="productCode"
      type="String"/>
    <Variable
      initialValue="new web.job.JobWizardHelper(CurrentLocation)"
      name="jobWizardHelper"
      type="web.job.JobWizardHelper"/>
    <Variable
      initialValue="!policyPeriod.Promoted and perm.Issuance.edit(issuance)"
      name="billingPageEditable"
      recalculateOnRefresh="true"/>
    <JobWizardStep
      beforeSave="gw.policy.PolicyPeriodValidation.validateOfferingAnswers(policyPeriod)"
      id="Offering"
      onEnter="if (openForEdit) { gw.web.productmodel.ProductModelSyncIssuesHandler.syncOffering(policyPeriod, jobWizardHelper );                                                  gw.web.productmodel.ProductModelSyncIssuesHandler.syncQuestions({policyPeriod}, jobWizardHelper )}"
      onExit="if (openForEdit) {                     gw.web.productmodel.ProductModelSyncIssuesHandler.syncPolicyTerm(policyPeriod, jobWizardHelper);                     gw.web.productmodel.ProductModelSyncIssuesHandler.syncPolicyLines(jobWizardHelper)               }"
      save="openForEdit"
      screen="OfferingScreen(policyPeriod, openForEdit, jobWizardHelper)"
      title="displaykey.Web.SubmissionWizardMenu.Offerings"
      visible="policy.Product.Offerings.Count &gt; 0"/>
    <WizardStepGroup
      id="LOBWizardStepGroup"
      label="displaykey.Web.Wizard.LineWizardStepGroup">
      <JobWizardStep
        id="PolicyInfo"
        onEnter="if (openForEdit) { gw.web.productmodel.ProductModelSyncIssuesHandler.syncPolicyTerm(policyPeriod, jobWizardHelper) }"
        save="openForEdit"
        screen="IssuanceWizard_PolicyInfoScreen(issuance, policyPeriod, openForEdit, jobWizardHelper)"
        title="displaykey.Web.SubmissionWizardMenu.PolicyInfo"/>
      <WizardStepSetRef
        def="LineWizardStepSet(issuance, policyPeriod, jobWizardHelper, openForEdit)"
        mode="productCode"/>
    </WizardStepGroup>
    <JobWizardStep
      id="RiskAnalysis"
      save="openForEdit"
      screen="Job_RiskAnalysisScreen(policyPeriod, openForEdit, jobWizardHelper)"
      title="displaykey.Web.Job.Policy.RiskAnalysis"
      visible="perm.System.viewriskevalissues or perm.System.viewriskpriorpolicies or perm.System.viewriskclaims or perm.System.viewriskpriorlosses"/>
    <JobWizardStep
      id="PolicyReview"
      onEnter="policyPeriod.AllAccountSyncables.each(\ a -&gt; a.prepareForDiff())"
      screen="IssuanceWizard_PolicyReviewScreen(issuance, policyPeriod, openForEdit, jobWizardHelper)"
      title="displaykey.Web.SubmissionWizardMenu.PolicyReview"/>
    <JobWizardStep
      available="policyPeriod.JobProcess.canViewQuote()"
      id="ViewQuote"
      screen="IssuanceWizard_QuoteScreen(issuance, policyPeriod, openForEdit, jobWizardHelper)"
      title="displaykey.Web.SubmissionWizardMenu.ViewQuote"
      visible="!policyPeriod.MultiLine"/>
    <JobWizardStep
      available="policyPeriod.JobProcess.canViewQuote()"
      id="ViewMultiLineQuote"
      mode="productCode"
      screen="IssuanceWizard_MultiLine_QuoteScreen(issuance, policyPeriod, openForEdit, jobWizardHelper)"
      title="displaykey.Web.SubmissionWizardMenu.ViewQuote"
      visible="policyPeriod.MultiLine"/>
    <JobWizardStep
      available="policyPeriod.JobProcess.canViewQuote()"
      id="Forms"
      save="openForEdit"
      screen="FormsScreen(policyPeriod, openForEdit, jobWizardHelper)"
      title="displaykey.Web.SubmissionWizardMenu.PolicyLines.Forms"/>
    <JobWizardStep
      allowFinish="false"
      available="policyPeriod.JobProcess.canViewQuote()"
      id="BillingInfo"
      save="(!policyPeriod.Promoted) and perm.Issuance.edit(issuance)"
      screen="IssuanceWizard_PaymentScreen(issuance, policyPeriod, billingPageEditable, jobWizardHelper)"
      title="displaykey.Web.SubmissionWizardMenu.Payment"/>
    <WizardStepSetRef
      def="JobWizardToolsMenuWizardStepSet(jobWizardHelper, policyPeriod)"/>
  </JobWizard>
</PCF>