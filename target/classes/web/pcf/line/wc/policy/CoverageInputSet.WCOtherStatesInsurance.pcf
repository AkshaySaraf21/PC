<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <InputSet
    id="CoverageInputSet"
    mode="WCOtherStatesInsurance">
    <Require
      name="coveragePattern"
      type="gw.api.productmodel.ClausePattern"/>
    <Require
      name="coverable"
      type="Coverable"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Variable
      initialValue="coverable as entity.WorkersCompLine"
      name="wcLine"/>
    <Variable
      initialValue="wcLine.WCOtherStatesInsurance"
      name="otherStatesInsurance"
      recalculateOnRefresh="true"/>
    <HiddenInput
      id="CovPatternDisplayName"
      value="coveragePattern.DisplayName"/>
    <InputGroup
      allowToggle="coveragePattern.allowToggle(coverable)"
      childrenVisible="coverable.getCoverageConditionOrExclusion(coveragePattern) != null"
      id="CovPatternInputGroup"
      label="coveragePattern.DisplayName"
      onToggle="coverable.setCoverageConditionOrExclusionExists(coveragePattern, VALUE)">
      <RangeInput
        editable="true"
        id="OtherStatesTermInput"
        label="otherStatesInsurance.WCOtherStatesOptTerm.Pattern.DisplayName"
        required="otherStatesInsurance.WCOtherStatesOptTerm.Pattern.Required"
        value="otherStatesInsurance.WCOtherStatesOptTerm.Value"
        valueRange="otherStatesInsurance.WCOtherStatesOptTerm?.Pattern.OrderedAvailableValues"
        visible="otherStatesInsurance.hasCovTerm(&quot;WCOtherStatesOpt&quot;)">
        <PostOnChange
          onChange="wcLine.setDefaultExcludedStates(otherStatesInsurance)"/>
      </RangeInput>
      <InputSet
        visible="otherStatesInsurance.hasCovTerm(&quot;WCIncludedStates&quot;) and otherStatesInsurance.WCOtherStatesOptTerm.Value == &quot;ListedOnly&quot;">
        <TextInput
          editable="true"
          id="WCIncludedStatesTermInput"
          label="otherStatesInsurance.WCIncludedStatesTerm.Pattern.DisplayName"
          required="otherStatesInsurance.WCIncludedStatesTerm.Pattern.Required"
          validationExpression="wcLine.validateIncludedStates(otherStatesInsurance.WCIncludedStatesTerm.Value)"
          value="otherStatesInsurance.WCIncludedStatesTerm.Value"/>
      </InputSet>
      <InputSet
        visible="otherStatesInsurance.hasCovTerm(&quot;WCExcludedStates&quot;) and otherStatesInsurance.WCOtherStatesOptTerm.Value == &quot;AllExcept&quot;">
        <TextInput
          editable="true"
          id="WCExcludedStatesTermInput"
          label="otherStatesInsurance.WCExcludedStatesTerm.Pattern.DisplayName"
          required="otherStatesInsurance.WCExcludedStatesTerm.Pattern.Required"
          validationExpression="wcLine.validateExcludedStatesContainMonopolisticStates(otherStatesInsurance.WCExcludedStatesTerm.Value)"
          value="otherStatesInsurance.WCExcludedStatesTerm.Value"/>
      </InputSet>
      <PostOnChange/>
    </InputGroup>
  </InputSet>
</PCF>